(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* (- 2) (pow x1))
      (* (- 8) (pow x2))
      (* (- 3) (pow x3))
      (* (- 45106) x1)
      (* (- 19449) x2)
      (* (- 54679) x3))
   (- 36042)))
(assert (<= (+ 0
       (* (- 1) (pow x1))
       (* (- 4) (pow x2))
       (* 6 (pow x3))
       (* (- 75393) x1)
       (* (- 16189) x2)
       (* (- 9138) x3))
    (- 50112)))
(assert (<= (+ 0
       (* (- 2) (pow x1))
       (* (- 3) (pow x2))
       (* 3 (pow x3))
       (* 73523 x1)
       (* (- 38929) x2)
       (* 53003 x3))
    (- 62385)))
(assert (<= (+ 0
       (* (- 6) (pow x1))
       (* 8 (pow x2))
       (* 2 (pow x3))
       (* 62039 x1)
       (* (- 84898) x2)
       (* 17286 x3))
    50683))
(assert (<= (+ 0
       (* 84069 x1)
       (* (- 58484) x2)
       (* 3527 x3)
       (* (- 51548) x4)
       (* (- 36660) x5)
       (* 47426 x6)
       (* (- 15758) x7))
    (- 94824)))
(assert (<= (+ 0
       (* (- 3440) x1)
       (* (- 69296) x2)
       (* 67854 x3)
       (* (- 97413) x4)
       (* (- 31694) x5)
       (* (- 67819) x6)
       (* (- 35298) x7))
    93611))
(assert (<= (+ 0
       (* 44924 x1)
       (* (- 96761) x2)
       (* (- 34467) x3)
       (* 27571 x4)
       (* (- 1492) x5)
       (* 96157 x6)
       (* (- 83896) x7))
    (- 3646)))
(assert (<= (+ 0
       (* (- 1596) x1)
       (* 96441 x2)
       (* 44595 x3)
       (* (- 7957) x4)
       (* (- 40883) x5)
       (* 19931 x6)
       (* (- 93794) x7))
    85112))
(assert (<= (+ 0
       (* 87024 x1)
       (* (- 67163) x2)
       (* (- 92152) x3)
       (* 67489 x4)
       (* 58922 x5)
       (* (- 28636) x6)
       (* (- 65184) x7))
    (- 9404)))
(check-sat)
(get-model)
