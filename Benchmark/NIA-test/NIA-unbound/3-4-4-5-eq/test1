(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* (- 4) (pow x1))
      (* (- 7) (pow x2))
      (* (- 5) (pow x3))
      (* (- 23286) x1)
      (* 80671 x2)
      (* 24887 x3))
   (- 3228)))
(assert (<= (+ 0
       (* (- 2) (pow x1))
       (* (- 6) (pow x2))
       (* (- 1) (pow x3))
       (* (- 73148) x1)
       (* 41541 x2)
       (* 74558 x3))
    (- 22017)))
(assert (<= (+ 0
       (* 2 (pow x1))
       (* 1 (pow x2))
       (* 4 (pow x3))
       (* (- 62513) x1)
       (* 3899 x2)
       (* (- 976) x3))
    (- 85520)))
(assert (<= (+ 0
       (* (- 1) (pow x1))
       (* 3 (pow x2))
       (* (- 10) (pow x3))
       (* (- 75215) x1)
       (* (- 97190) x2)
       (* (- 42961) x3))
    12127))
(assert (<= (+ 0
       (* 26692 x1)
       (* (- 95207) x2)
       (* 40130 x3)
       (* (- 6055) x4)
       (* 7405 x5)
       (* (- 58664) x6)
       (* 92011 x7))
    (- 64168)))
(assert (<= (+ 0
       (* (- 10032) x1)
       (* (- 13571) x2)
       (* (- 55169) x3)
       (* (- 23335) x4)
       (* (- 76847) x5)
       (* (- 8381) x6)
       (* (- 5364) x7))
    33360))
(assert (<= (+ 0
       (* (- 45188) x1)
       (* (- 69561) x2)
       (* (- 4291) x3)
       (* (- 97884) x4)
       (* (- 55840) x5)
       (* (- 44526) x6)
       (* (- 30788) x7))
    21255))
(assert (<= (+ 0
       (* 89504 x1)
       (* (- 23780) x2)
       (* (- 83941) x3)
       (* (- 72736) x4)
       (* 66203 x5)
       (* 79820 x6)
       (* 92430 x7))
    (- 90400)))
(assert (<= (+ 0
       (* 36799 x1)
       (* (- 38122) x2)
       (* (- 93334) x3)
       (* 74551 x4)
       (* (- 72297) x5)
       (* 46254 x6)
       (* 60563 x7))
    (- 73388)))
(check-sat)
(get-model)
