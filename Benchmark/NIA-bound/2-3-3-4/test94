(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (<= (+ 0
       (* 9 (pow x1))
       (* (- 10) (pow x2))
       (* (- 61397) x1)
       (* 82729 x2)
       (* 84949 x3)
       (* (- 17862) x4)
       (* 40117 x5))
    (- 29366)))
(assert (<= (+ 0
       (* 7 (pow x1))
       (* 9 (pow x2))
       (* (- 29440) x1)
       (* (- 74271) x2)
       (* (- 29453) x3)
       (* (- 51255) x4)
       (* (- 18083) x5))
    (- 9106)))
(assert (<= (+ 0
       (* (- 9) (pow x1))
       (* (- 10) (pow x2))
       (* (- 49584) x1)
       (* 27139 x2)
       (* 50594 x3)
       (* 82864 x4)
       (* (- 21181) x5))
    31832))
(assert (<= (+ 0 (* 60 x1) (* 14 x2) (* 99 x3) (* 2 x4) (* 92 x5)) (- 87154)))
(assert (<= (+ 0 (* (- 51) x1) (* (- 96) x2) (* 44 x3) (* 13 x4) (* (- 47) x5))
    (- 84717)))
(assert (<= (+ 0 (* (- 30) x1) (* (- 45) x2) (* 60 x3) (* (- 33) x4) (* 13 x5)) 58877))
(assert (<= (+ 0 (* (- 63) x1) (* 80 x2) (* (- 30) x3) (* (- 94) x4) (* (- 23) x5))
    (- 366)))
(check-sat)
(get-model)
