(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (<= (+ 0
       (* (- 6) (pow x1))
       (* (- 10) (pow x2))
       (* 4 (pow x3))
       (* (- 8) x1)
       (* 18 x2)
       (* 56 x3)
       (* 51 x4)
       (* 94 x5)
       (* 54 x6))
    (- 91947)))
(assert (<= (+ 0
       (* 2 (pow x1))
       (* 4 (pow x2))
       (* (- 9) (pow x3))
       (* (- 79) x1)
       (* 33 x2)
       (* 88 x3)
       (* (- 74) x4)
       (* 52 x5)
       (* 75 x6))
    75239))
(assert (<= (+ 0
       (* 6 (pow x1))
       (* (- 9) (pow x2))
       (* (- 2) (pow x3))
       (* 46 x1)
       (* 6 x2)
       (* 74 x3)
       (* (- 3) x4)
       (* (- 50) x5)
       (* 57 x6))
    (- 64796)))
(assert (<= (+ 0 (* 97 x1) (* 55 x2) (* 27 x3) (* 49 x4) (* 14 x5) (* (- 75) x6)) 56648))
(assert (<= (+ 0 (* 73 x1) (* 50 x2) (* 36 x3) (* (- 30) x4) (* 21 x5) (* 77 x6))
    (- 20439)))
(assert (<= (+ 0 (* (- 82) x1) (* 2 x2) (* (- 50) x3) (* 70 x4) (* 81 x5) (* 92 x6))
    4527))
(assert (<= (+ 0
       (* (- 47) x1)
       (* 80 x2)
       (* (- 73) x3)
       (* 37 x4)
       (* (- 10) x5)
       (* (- 25) x6))
    (- 28159)))
(check-sat)
(get-model)
