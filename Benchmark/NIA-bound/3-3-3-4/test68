(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (<= (+ 0
       (* (- 6) (pow x1))
       (* 2 (pow x2))
       (* 6 (pow x3))
       (* (- 72) x1)
       (* 84 x2)
       (* (- 60) x3)
       (* (- 38) x4)
       (* (- 12) x5)
       (* (- 99) x6))
    (- 45862)))
(assert (<= (+ 0
       (* 3 (pow x1))
       (* 5 (pow x2))
       (* (- 1) (pow x3))
       (* (- 40) x1)
       (* (- 18) x2)
       (* 87 x3)
       (* (- 98) x4)
       (* (- 70) x5)
       (* 84 x6))
    (- 85439)))
(assert (<= (+ 0
       (* 8 (pow x1))
       (* (- 4) (pow x2))
       (* (- 7) (pow x3))
       (* 63 x1)
       (* (- 72) x2)
       (* 22 x3)
       (* 6 x4)
       (* (- 54) x5)
       (* (- 28) x6))
    59406))
(assert (<= (+ 0 (* 84 x1) (* (- 30) x2) (* (- 60) x3) (* (- 67) x4) (* 17 x5) (* 3 x6))
    (- 19205)))
(assert (<= (+ 0 (* 71 x1) (* (- 34) x2) (* 1 x3) (* 84 x4) (* (- 85) x5) (* (- 22) x6))
    68909))
(assert (<= (+ 0 (* (- 29) x1) (* 68 x2) (* 4 x3) (* 40 x4) (* (- 49) x5) (* 23 x6))
    69127))
(assert (<= (+ 0 (* 97 x1) (* 43 x2) (* 34 x3) (* 41 x4) (* 30 x5) (* 93 x6)) (- 80569)))
(check-sat)
(get-model)
