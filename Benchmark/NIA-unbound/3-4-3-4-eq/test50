(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* 0 (pow x1))
      (* 0 (pow x2))
      (* 0 (pow x3))
      (* (- 6) x1)
      (* (- 8) x2)
      (* 1 x3))
   0))
(assert (<= (+ 0
       (* 8 (pow x1))
       (* 3 (pow x2))
       (* (- 10) (pow x3))
       (* 69 x1)
       (* (- 98) x2)
       (* 74 x3))
    (- 74949)))
(assert (<= (+ 0
       (* 1 (pow x1))
       (* 1 (pow x2))
       (* (- 5) (pow x3))
       (* (- 100) x1)
       (* 51 x2)
       (* 65 x3))
    (- 13990)))
(assert (<= (+ 0
       (* (- 99) x1)
       (* (- 20) x2)
       (* 74 x3)
       (* 54 x4)
       (* 58 x5)
       (* (- 2) x6)
       (* (- 76) x7))
    (- 73277)))
(assert (<= (+ 0
       (* 54 x1)
       (* (- 11) x2)
       (* 71 x3)
       (* 38 x4)
       (* 74 x5)
       (* (- 94) x6)
       (* 33 x7))
    14023))
(assert (<= (+ 0
       (* (- 78) x1)
       (* 52 x2)
       (* 54 x3)
       (* 24 x4)
       (* (- 51) x5)
       (* 79 x6)
       (* 4 x7))
    (- 16197)))
(assert (<= (+ 0
       (* 39 x1)
       (* 6 x2)
       (* (- 80) x3)
       (* 36 x4)
       (* 61 x5)
       (* (- 81) x6)
       (* (- 72) x7))
    9168))
(check-sat)
(get-model)
