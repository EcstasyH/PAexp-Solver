(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* 0 (pow x1))
      (* 1 (pow x2))
      (* (- 1) (pow x3))
      (* 4 x1)
      (* 5 x2)
      (* (- 5) x3))
   0))
(assert (<= (+ 0
       (* 4 (pow x1))
       (* 3 (pow x2))
       (* 4 (pow x3))
       (* (- 26) x1)
       (* 49 x2)
       (* (- 29) x3))
    73367))
(assert (<= (+ 0
       (* (- 6) (pow x1))
       (* (- 4) (pow x2))
       (* 3 (pow x3))
       (* 21 x1)
       (* (- 57) x2)
       (* (- 6) x3))
    91553))
(assert (<= (+ 0
       (* (- 24) x1)
       (* 18 x2)
       (* 59 x3)
       (* 7 x4)
       (* (- 25) x5)
       (* 39 x6)
       (* (- 32) x7))
    71984))
(assert (<= (+ 0
       (* 31 x1)
       (* (- 88) x2)
       (* 91 x3)
       (* (- 62) x4)
       (* 95 x5)
       (* (- 37) x6)
       (* 0 x7))
    95101))
(assert (<= (+ 0
       (* 18 x1)
       (* (- 59) x2)
       (* (- 49) x3)
       (* 43 x4)
       (* 12 x5)
       (* (- 96) x6)
       (* 32 x7))
    32570))
(assert (<= (+ 0
       (* (- 78) x1)
       (* 81 x2)
       (* (- 43) x3)
       (* (- 78) x4)
       (* (- 56) x5)
       (* 93 x6)
       (* (- 72) x7))
    79659))
(check-sat)
(get-model)
