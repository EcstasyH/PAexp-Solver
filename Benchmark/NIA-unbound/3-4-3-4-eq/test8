(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* 1 (pow x1))
      (* (- 1) (pow x2))
      (* 1 (pow x3))
      (* 5 x1)
      (* 0 x2)
      (* 4 x3))
   0))
(assert (<= (+ 0
       (* (- 6) (pow x1))
       (* 3 (pow x2))
       (* (- 8) (pow x3))
       (* (- 86) x1)
       (* 83 x2)
       (* 29 x3))
    58287))
(assert (<= (+ 0
       (* 3 (pow x1))
       (* (- 7) (pow x2))
       (* 7 (pow x3))
       (* 4 x1)
       (* 89 x2)
       (* 26 x3))
    (- 46070)))
(assert (<= (+ 0
       (* (- 6) x1)
       (* 71 x2)
       (* 73 x3)
       (* (- 77) x4)
       (* 92 x5)
       (* (- 42) x6)
       (* 69 x7))
    36989))
(assert (<= (+ 0
       (* (- 73) x1)
       (* (- 56) x2)
       (* 66 x3)
       (* (- 99) x4)
       (* 95 x5)
       (* (- 42) x6)
       (* 19 x7))
    70488))
(assert (<= (+ 0
       (* 72 x1)
       (* (- 1) x2)
       (* 93 x3)
       (* 56 x4)
       (* 72 x5)
       (* 57 x6)
       (* (- 28) x7))
    (- 52155)))
(assert (<= (+ 0
       (* 28 x1)
       (* 29 x2)
       (* (- 78) x3)
       (* (- 42) x4)
       (* (- 67) x5)
       (* 68 x6)
       (* 60 x7))
    48415))
(check-sat)
(get-model)
