(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* 0 (pow x1))
      (* (- 1) (pow x2))
      (* 1 (pow x3))
      (* 5 x1)
      (* 8 x2)
      (* 3 x3))
   0))
(assert (<= (+ 0
       (* 7 (pow x1))
       (* 4 (pow x2))
       (* (- 6) (pow x3))
       (* 86 x1)
       (* 10 x2)
       (* (- 34) x3))
    20954))
(assert (<= (+ 0
       (* 6 (pow x1))
       (* (- 5) (pow x2))
       (* 7 (pow x3))
       (* (- 75) x1)
       (* 32 x2)
       (* 59 x3))
    56392))
(assert (<= (+ 0
       (* (- 87) x1)
       (* (- 56) x2)
       (* 60 x3)
       (* 60 x4)
       (* (- 80) x5)
       (* 3 x6)
       (* 77 x7))
    (- 32020)))
(assert (<= (+ 0
       (* 70 x1)
       (* 0 x2)
       (* (- 33) x3)
       (* (- 23) x4)
       (* 69 x5)
       (* 12 x6)
       (* 80 x7))
    73713))
(assert (<= (+ 0
       (* 66 x1)
       (* (- 31) x2)
       (* 26 x3)
       (* 91 x4)
       (* 84 x5)
       (* (- 95) x6)
       (* (- 76) x7))
    (- 67776)))
(assert (<= (+ 0
       (* (- 47) x1)
       (* (- 90) x2)
       (* (- 20) x3)
       (* 95 x4)
       (* (- 14) x5)
       (* 0 x6)
       (* (- 91) x7))
    (- 26168)))
(check-sat)
(get-model)
