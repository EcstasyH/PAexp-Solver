(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* 0 (pow x1))
      (* (- 1) (pow x2))
      (* (- 1) (pow x3))
      (* 7 x1)
      (* (- 7) x2)
      (* 5 x3))
   0))
(assert (<= (+ 0
       (* 2 (pow x1))
       (* 5 (pow x2))
       (* (- 7) (pow x3))
       (* 65 x1)
       (* 77 x2)
       (* 14 x3))
    7442))
(assert (<= (+ 0
       (* (- 5) (pow x1))
       (* (- 1) (pow x2))
       (* 2 (pow x3))
       (* 7 x1)
       (* (- 69) x2)
       (* 1 x3))
    37277))
(assert (<= (+ 0
       (* (- 10) x1)
       (* (- 52) x2)
       (* (- 68) x3)
       (* 5 x4)
       (* (- 15) x5)
       (* 83 x6)
       (* (- 15) x7))
    (- 96840)))
(assert (<= (+ 0
       (* (- 60) x1)
       (* 99 x2)
       (* 30 x3)
       (* 18 x4)
       (* 71 x5)
       (* 88 x6)
       (* 85 x7))
    (- 701)))
(assert (<= (+ 0
       (* (- 36) x1)
       (* 98 x2)
       (* 26 x3)
       (* 3 x4)
       (* 29 x5)
       (* 75 x6)
       (* 1 x7))
    64612))
(assert (<= (+ 0
       (* 42 x1)
       (* (- 54) x2)
       (* 81 x3)
       (* (- 6) x4)
       (* 47 x5)
       (* 29 x6)
       (* 51 x7))
    (- 28997)))
(check-sat)
(get-model)
