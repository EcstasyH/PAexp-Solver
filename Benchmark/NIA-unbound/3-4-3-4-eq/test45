(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* 0 (pow x1))
      (* 1 (pow x2))
      (* (- 1) (pow x3))
      (* 2 x1)
      (* 3 x2)
      (* 0 x3))
   0))
(assert (<= (+ 0
       (* 6 (pow x1))
       (* (- 4) (pow x2))
       (* 1 (pow x3))
       (* 38 x1)
       (* 70 x2)
       (* (- 17) x3))
    73682))
(assert (<= (+ 0
       (* 4 (pow x1))
       (* 6 (pow x2))
       (* (- 1) (pow x3))
       (* (- 90) x1)
       (* (- 18) x2)
       (* 42 x3))
    (- 4420)))
(assert (<= (+ 0
       (* 50 x1)
       (* (- 96) x2)
       (* (- 31) x3)
       (* 18 x4)
       (* (- 16) x5)
       (* 56 x6)
       (* 36 x7))
    (- 8732)))
(assert (<= (+ 0
       (* 21 x1)
       (* 4 x2)
       (* 80 x3)
       (* (- 39) x4)
       (* (- 82) x5)
       (* 44 x6)
       (* (- 43) x7))
    65200))
(assert (<= (+ 0
       (* (- 72) x1)
       (* 96 x2)
       (* 96 x3)
       (* 31 x4)
       (* (- 25) x5)
       (* (- 89) x6)
       (* (- 68) x7))
    15092))
(assert (<= (+ 0
       (* (- 97) x1)
       (* 30 x2)
       (* 73 x3)
       (* (- 90) x4)
       (* (- 27) x5)
       (* (- 61) x6)
       (* (- 55) x7))
    37389))
(check-sat)
(get-model)
