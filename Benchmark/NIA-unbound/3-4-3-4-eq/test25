(set-logic ALL)
(define-fun-rec pow ((x Int)) Int (ite (= x 0) 1 (* 10 (pow (- x 1)) ) ) )
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (= (+ 0
      (* (- 1) (pow x1))
      (* 1 (pow x2))
      (* 1 (pow x3))
      (* (- 10) x1)
      (* 4 x2)
      (* 0 x3))
   0))
(assert (<= (+ 0
       (* 3 (pow x1))
       (* 8 (pow x2))
       (* (- 4) (pow x3))
       (* (- 99) x1)
       (* (- 71) x2)
       (* 78 x3))
    (- 65847)))
(assert (<= (+ 0
       (* 6 (pow x1))
       (* 3 (pow x2))
       (* (- 2) (pow x3))
       (* 78 x1)
       (* 62 x2)
       (* 62 x3))
    (- 19057)))
(assert (<= (+ 0
       (* 24 x1)
       (* 54 x2)
       (* (- 75) x3)
       (* 40 x4)
       (* (- 3) x5)
       (* 42 x6)
       (* 89 x7))
    80601))
(assert (<= (+ 0
       (* (- 36) x1)
       (* 35 x2)
       (* 60 x3)
       (* 15 x4)
       (* 50 x5)
       (* (- 10) x6)
       (* 75 x7))
    14106))
(assert (<= (+ 0
       (* (- 87) x1)
       (* 61 x2)
       (* (- 78) x3)
       (* 6 x4)
       (* (- 37) x5)
       (* 51 x6)
       (* (- 61) x7))
    (- 8045)))
(assert (<= (+ 0
       (* (- 27) x1)
       (* 73 x2)
       (* 51 x3)
       (* 63 x4)
       (* 10 x5)
       (* (- 58) x6)
       (* (- 74) x7))
    69312))
(check-sat)
(get-model)
